import numpy as np
import matplotlib.pyplot as plt

def mandelbrot(c, max_iter):
    z = 0
    n = 0
    while abs(z) <= 2 and n < max_iter:
        z = z*z + c
        n += 1
    return n

def mandelbrot_set(xmin, xmax, ymin, ymax, width, height, max_iter):
    mandelbrot_img = np.zeros((height, width))
    for x in range(width):
        for y in range(height):
            real = xmin + (xmax - xmin) * x / (width - 1)
            imag = ymin + (ymax - ymin) * y / (height - 1)
            c = complex(real, imag)
            mandelbrot_img[y, x] = mandelbrot(c, max_iter)
    return mandelbrot_img

# Set the parameters
xmin, xmax = -2.0, 1.0
ymin, ymax = -1.5, 1.5
width, height = 1000, 1000
max_iter = 255

# Generate the Mandelbrot set
mandelbrot_img = mandelbrot_set(xmin, xmax, ymin, ymax, width, height, max_iter)

# Plot the Mandelbrot set
plt.figure(figsize=(10, 10))
plt.imshow(mandelbrot_img, extent=(xmin, xmax, ymin, ymax), cmap='hot', interpolation='nearest')
plt.title('Mandelbrot Set')
plt.xlabel('Real')
plt.ylabel('Imaginary')
plt.colorbar(label='Iterations')
plt.show()
